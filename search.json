[{"path":[]},{"path":"https://poissonconsulting.github.io/mcmcdata/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement [INSERT CONTACT METHOD]. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/ code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https:// www.contributor-covenant.org/translations.","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to mcmcdata","title":"Contributing to mcmcdata","text":"outlines propose change mcmcdata.","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to mcmcdata","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to mcmcdata","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to mcmcdata","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"\", fork = TRUE). Install development dependences devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. Begin commit merge messages - indicate user facing changes included NEWS.md. use fledge automatically generate NEWS.md file.","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to mcmcdata","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to mcmcdata","text":"Please note mcmcdata project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"The MIT License (MIT)","title":"The MIT License (MIT)","text":"Copyright © 2018 Poisson Consulting Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with mcmcdata","title":"Getting help with mcmcdata","text":"Thanks using mcmcdata! filing issue, places explore pieces put together make process smooth possible.","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/SUPPORT.html","id":"make-sure-its-new","dir":"","previous_headings":"","what":"Make sure its new","title":"Getting help with mcmcdata","text":"opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers (e.g. :pr, :closed) needed. example, ’d simply remove :open search issues repo, open closed.","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/SUPPORT.html","id":"make-a-reprex","dir":"","previous_headings":"","what":"Make a reprex","title":"Getting help with mcmcdata","text":"Start making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (pretty insane ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help! section tidyverse site.","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Joe Thorley. Author, maintainer.","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Thorley J (2025). mcmcdata: Manipulate MCMC Samples Data Frames. R package version 0.0.1.9000.","code":"@Manual{,   title = {mcmcdata: Manipulate MCMC Samples and Data Frames},   author = {Joe Thorley},   year = {2025},   note = {R package version 0.0.1.9000}, }"},{"path":[]},{"path":"https://poissonconsulting.github.io/mcmcdata/index.html","id":"introduction","dir":"","previous_headings":"","what":"Introduction","title":"Manipulate MCMC Samples and Data Frames","text":"mcmcdata R package manipulate Monte Carlo Markov Chain samples data.","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Manipulate MCMC Samples and Data Frames","text":"install latest version GitHub","code":"# install.packages(\"devtools\") devtools::install_github(\"poissonconsulting/mcmcdata\")"},{"path":"https://poissonconsulting.github.io/mcmcdata/index.html","id":"demonstration","dir":"","previous_headings":"","what":"Demonstration","title":"Manipulate MCMC Samples and Data Frames","text":"","code":"library(mcmcdata) #>  #> Attaching package: 'mcmcdata' #> The following object is masked from 'package:stats': #>  #>     filter  print(mcmc_data_example) #> $mcmc #> [1] 3.718025 4.718025 #>  #> nchains:  2  #> niters:  400  #>  #> $data #> # A tibble: 2 × 3 #>   homeworld species films     #>   <chr>     <chr>   <list>    #> 1 Tatooine  Human   <chr [5]> #> 2 Tatooine  Droid   <chr [6]> #>  #> attr(,\"class\") #> [1] \"mcmc_data\"  md_ex <- slice(mcmc_data_example, c(1,2,2)) print(md_ex) #> $mcmc #> [1] 3.718025 4.718025 4.718025 #>  #> nchains:  2  #> niters:  400  #>  #> $data #> # A tibble: 3 × 3 #>   homeworld species films     #>   <chr>     <chr>   <list>    #> 1 Tatooine  Human   <chr [5]> #> 2 Tatooine  Droid   <chr [6]> #> 3 Tatooine  Droid   <chr [6]> #>  #> attr(,\"class\") #> [1] \"mcmc_data\" md_ex <- group_by(md_ex, homeworld, species) coef(summarise(md_ex)) #> # A tibble: 2 × 6 #>   homeworld species estimate lower upper svalue #>   <chr>     <chr>      <dbl> <dbl> <dbl>  <dbl> #> 1 Tatooine  Droid       9.44  6.42 12.5    9.65 #> 2 Tatooine  Human       3.72  2.21  5.23   9.65"},{"path":"https://poissonconsulting.github.io/mcmcdata/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Manipulate MCMC Samples and Data Frames","text":"","code":"Warning in citation(package = \"mcmcdata\"): no date field in DESCRIPTION file of package 'mcmcdata' Warning in citation(package = \"mcmcdata\"): could not determine year for 'mcmcdata' from package DESCRIPTION file  To cite package 'mcmcdata' in publications use:    Thorley J (????). _mcmcdata: Manipulate MCMC Samples and Data   Frames_. R package version 0.0.1.9000.  A BibTeX entry for LaTeX users is    @Manual{,     title = {mcmcdata: Manipulate MCMC Samples and Data Frames},     author = {Joe Thorley},     note = {R package version 0.0.1.9000},   }"},{"path":"https://poissonconsulting.github.io/mcmcdata/index.html","id":"contribution","dir":"","previous_headings":"","what":"Contribution","title":"Manipulate MCMC Samples and Data Frames","text":"Please report issues. Pull requests always welcome.","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Manipulate MCMC Samples and Data Frames","text":"Please note mcmcdata project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/index.html","id":"inspiration","dir":"","previous_headings":"","what":"Inspiration","title":"Manipulate MCMC Samples and Data Frames","text":"coda rjags","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/anti_join.mcmc_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Anti join mcmc data — anti_join.mcmc_data","title":"Anti join mcmc data — anti_join.mcmc_data","text":"Anti join mcmc data","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/anti_join.mcmc_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Anti join mcmc data — anti_join.mcmc_data","text":"","code":"# S3 method for class 'mcmc_data' anti_join(x, y, by = NULL, copy = FALSE, ...)"},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/anti_join.mcmc_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Anti join mcmc data — anti_join.mcmc_data","text":"x, y pair data frames, data frame extensions (e.g. tibble), lazy data frames (e.g. dbplyr dtplyr). See Methods, , details. join specification created join_by(), character vector variables join . NULL, default, *_join() perform natural join, using variables common across x y. message lists variables can check correct; suppress message supplying explicitly. join different variables x y, use join_by() specification. example, join_by(== b) match x$y$b. join multiple variables, use join_by() specification multiple expressions. example, join_by(== b, c == d) match x$y$b x$c y$d. column names x y, can shorten listing variable names, like join_by(, c). join_by() can also used perform inequality, rolling, overlap joins. See documentation ?join_by details types joins. simple equality joins, can alternatively specify character vector variable names join . example, = c(\"\", \"b\") joins x$y$x$b y$b. variable names differ x y, use named character vector like = c(\"x_a\" = \"y_a\", \"x_b\" = \"y_b\"). perform cross-join, generating combinations x y, see cross_join(). copy x y data source, copy TRUE, y copied src x.  allows join tables across srcs, potentially expensive operation must opt . ... parameters passed onto methods.","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/arrange.mcmc_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Arrange mcmcr data — arrange.mcmc_data","title":"Arrange mcmcr data — arrange.mcmc_data","text":"Arrange mcmcr data","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/arrange.mcmc_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Arrange mcmcr data — arrange.mcmc_data","text":"","code":"# S3 method for class 'mcmc_data' arrange(.data, ...)"},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/arrange.mcmc_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Arrange mcmcr data — arrange.mcmc_data","text":".data mcmc_data object ... <data-masking> Variables, functions variables. Use desc() sort variable descending order.","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/arrange.mcmc_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Arrange mcmcr data — arrange.mcmc_data","text":"","code":"arrange(mcmc_data_example, species, homeworld) #> $mcmc #> [1] 4.718025 3.718025 #>  #> nchains:  2  #> niters:  400  #>  #> $data #> # A tibble: 2 × 3 #>   homeworld species films     #>   <chr>     <chr>   <list>    #> 1 Tatooine  Droid   <chr [6]> #> 2 Tatooine  Human   <chr [5]> #>  #> attr(,\"class\") #> [1] \"mcmc_data\""},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/as_tibble.mcmc_data.html","id":null,"dir":"Reference","previous_headings":"","what":"As Tibble — as_tibble.mcmc_data","title":"As Tibble — as_tibble.mcmc_data","text":"Tibble","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/as_tibble.mcmc_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"As Tibble — as_tibble.mcmc_data","text":"","code":"# S3 method for class 'mcmc_data' as_tibble(x, samples = FALSE, ...)"},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/as_tibble.mcmc_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"As Tibble — as_tibble.mcmc_data","text":"x mcmc_data object coerce tibble. samples flag specifying whether include samples ... Unused, extensibility.","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/bind_rows2.html","id":null,"dir":"Reference","previous_headings":"","what":"Bind Rows — bind_rows2","title":"Bind Rows — bind_rows2","text":"Bind Rows","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/bind_rows2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bind Rows — bind_rows2","text":"","code":"bind_rows2(x, y)"},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/bind_rows2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bind Rows — bind_rows2","text":"x mcmc_data y second mcmc_data","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/bind_rows2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bind Rows — bind_rows2","text":"","code":"bind_rows2(mcmc_data_example, mcmc_data_example) #> $mcmc #> [1] 3.718025 4.718025 3.718025 4.718025 #>  #> nchains:  2  #> niters:  400  #>  #> $data #> # A tibble: 4 × 3 #>   homeworld species films     #>   <chr>     <chr>   <list>    #> 1 Tatooine  Human   <chr [5]> #> 2 Tatooine  Droid   <chr [6]> #> 3 Tatooine  Human   <chr [5]> #> 4 Tatooine  Droid   <chr [6]> #>  #> attr(,\"class\") #> [1] \"mcmc_data\""},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/check_mcmc_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Check mcmc data — check_mcmc_data","title":"Check mcmc data — check_mcmc_data","text":"Checks object mcmc_data.","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/check_mcmc_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check mcmc data — check_mcmc_data","text":"","code":"check_mcmc_data(x, x_name = NULL)"},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/check_mcmc_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check mcmc data — check_mcmc_data","text":"x object check. x_name string name object x NULL.","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/check_mcmc_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check mcmc data — check_mcmc_data","text":"invisible copy x (throw error).","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/check_mcmc_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check mcmc data — check_mcmc_data","text":"","code":"check_mcmc_data(mcmcdata::mcmc_data_example)"},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/coef.mcmc_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Coefficients — coef.mcmc_data","title":"Coefficients — coef.mcmc_data","text":"Gets coefficient table tibble.","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/coef.mcmc_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coefficients — coef.mcmc_data","text":"","code":"# S3 method for class 'mcmc_data' coef(object, conf_level = 0.95, estimate = stats::median, ...)"},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/coef.mcmc_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coefficients — coef.mcmc_data","text":"object mcmc_data object get coefficent table . conf_level probability specifying confidence level. estimate function calculate point estimate. ... Unused","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/coef.mcmc_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coefficients — coef.mcmc_data","text":"","code":"coef(mcmc_data_example) #> # A tibble: 2 × 7 #>   homeworld species films     estimate lower upper svalue #>   <chr>     <chr>   <list>       <dbl> <dbl> <dbl>  <dbl> #> 1 Tatooine  Human   <chr [5]>     3.72  2.21  5.23   9.65 #> 2 Tatooine  Droid   <chr [6]>     4.72  3.21  6.23   9.65"},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/fill_na.mcmc_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Fill Missing Values — fill_na.mcmc_data","title":"Fill Missing Values — fill_na.mcmc_data","text":"Fills object's missing values preserving object's dimensionality class.","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/fill_na.mcmc_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fill Missing Values — fill_na.mcmc_data","text":"","code":"# S3 method for class 'mcmc_data' fill_na(x, value = 0, ...)"},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/fill_na.mcmc_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fill Missing Values — fill_na.mcmc_data","text":"x object. value scalar value replace values . ... arguments passed methods.","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/fill_na.mcmc_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fill Missing Values — fill_na.mcmc_data","text":"modified object.","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/fill_na.mcmc_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fill Missing Values — fill_na.mcmc_data","text":"defined objects values consistent class ie standard data.frames.","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/fill_na.mcmc_data.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Fill Missing Values — fill_na.mcmc_data","text":"fill_na(logical): Fill Missing Values logical Objects fill_na(integer): Fill Missing Values integer Objects fill_na(numeric): Fill Missing Values numeric Objects fill_na(character): Fill Missing Values character Objects","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/fill_na.mcmc_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fill Missing Values — fill_na.mcmc_data","text":"","code":"# logical fill_na(c(TRUE, NA)) #> [1]  TRUE FALSE  # integer fill_na(c(1L, NA), 0) #> [1] 1 0  # numeric fill_na(c(1, NA), Inf) #> [1]   1 Inf  # character fill_na(c(\"text\", NA)) #> [1] \"text\" \"0\"    fill_na(matrix(c(\"text\", NA)), value = Inf) #>      [,1]   #> [1,] \"text\" #> [2,] \"Inf\""},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/filter.mcmc_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Slice mcmcr data — filter.mcmc_data","title":"Slice mcmcr data — filter.mcmc_data","text":"Slice mcmcr data","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/filter.mcmc_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Slice mcmcr data — filter.mcmc_data","text":"","code":"# S3 method for class 'mcmc_data' filter(.data, ...)"},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/filter.mcmc_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Slice mcmcr data — filter.mcmc_data","text":".data mcmc_data object ... slice(): <data-masking> Integer row values. Provide either positive values keep, negative values drop. values provided must either positive negative. Indices beyond number rows input silently ignored. slice_*(), arguments passed methods.","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/filter.mcmc_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Slice mcmcr data — filter.mcmc_data","text":"","code":"filter(mcmc_data_example, species == \"Droid\") #> $mcmc #> [1] 4.718025 #>  #> nchains:  2  #> niters:  400  #>  #> $data #> # A tibble: 1 × 3 #>   homeworld species films     #>   <chr>     <chr>   <list>    #> 1 Tatooine  Droid   <chr [6]> #>  #> attr(,\"class\") #> [1] \"mcmc_data\""},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/group_by.mcmc_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Group mcmc data — group_by.mcmc_data","title":"Group mcmc data — group_by.mcmc_data","text":"Group mcmc data","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/group_by.mcmc_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group mcmc data — group_by.mcmc_data","text":"","code":"# S3 method for class 'mcmc_data' group_by(.data, ..., .add = FALSE)"},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/group_by.mcmc_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group mcmc data — group_by.mcmc_data","text":".data mcmc_data object ... group_by(), variables computations group . Computations always done ungrouped data frame. perform computations grouped data, need use separate mutate() step group_by(). Computations allowed nest_by(). ungroup(), variables remove grouping. .add FALSE, default, group_by() override existing groups. add existing groups, use .add = TRUE. argument previously called add, prevented creating new grouping variable called add, conflicts naming conventions.","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/group_by.mcmc_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Group mcmc data — group_by.mcmc_data","text":"","code":"group_by(mcmc_data_example, homeworld, species) #> $mcmc #> [1] 3.718025 4.718025 #>  #> nchains:  2  #> niters:  400  #>  #> $data #> # A tibble: 2 × 3 #> # Groups:   homeworld, species [2] #>   homeworld species films     #>   <chr>     <chr>   <list>    #> 1 Tatooine  Human   <chr [5]> #> 2 Tatooine  Droid   <chr [6]> #>  #> attr(,\"class\") #> [1] \"mcmc_data\""},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/inner_join.mcmc_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Inner join mcmc data — inner_join.mcmc_data","title":"Inner join mcmc data — inner_join.mcmc_data","text":"Inner join mcmc data","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/inner_join.mcmc_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inner join mcmc data — inner_join.mcmc_data","text":"","code":"# S3 method for class 'mcmc_data' inner_join(x, y, by = NULL, copy = FALSE, suffix = c(\".x\", \".y\"), ...)"},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/inner_join.mcmc_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inner join mcmc data — inner_join.mcmc_data","text":"x, y pair data frames, data frame extensions (e.g. tibble), lazy data frames (e.g. dbplyr dtplyr). See Methods, , details. join specification created join_by(), character vector variables join . NULL, default, *_join() perform natural join, using variables common across x y. message lists variables can check correct; suppress message supplying explicitly. join different variables x y, use join_by() specification. example, join_by(== b) match x$y$b. join multiple variables, use join_by() specification multiple expressions. example, join_by(== b, c == d) match x$y$b x$c y$d. column names x y, can shorten listing variable names, like join_by(, c). join_by() can also used perform inequality, rolling, overlap joins. See documentation ?join_by details types joins. simple equality joins, can alternatively specify character vector variable names join . example, = c(\"\", \"b\") joins x$y$x$b y$b. variable names differ x y, use named character vector like = c(\"x_a\" = \"y_a\", \"x_b\" = \"y_b\"). perform cross-join, generating combinations x y, see cross_join(). copy x y data source, copy TRUE, y copied src x.  allows join tables across srcs, potentially expensive operation must opt . suffix non-joined duplicate variables x y, suffixes added output disambiguate . character vector length 2. ... parameters passed onto methods.","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/is.mcmc_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Is an MCMC data object — is.mcmc_data","title":"Is an MCMC data object — is.mcmc_data","text":"Tests whether x object class 'mcmc_data'","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/is.mcmc_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is an MCMC data object — is.mcmc_data","text":"","code":"is.mcmc_data(x)"},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/is.mcmc_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is an MCMC data object — is.mcmc_data","text":"x object test.","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/is.mcmc_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is an MCMC data object — is.mcmc_data","text":"flag indicating whether test positive.","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/left_join.mcmc_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Left join mcmc data — left_join.mcmc_data","title":"Left join mcmc data — left_join.mcmc_data","text":"Left join mcmc data","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/left_join.mcmc_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Left join mcmc data — left_join.mcmc_data","text":"","code":"# S3 method for class 'mcmc_data' left_join(x, y, by = NULL, copy = FALSE, suffix = c(\".x\", \".y\"), ...)"},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/left_join.mcmc_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Left join mcmc data — left_join.mcmc_data","text":"x, y pair data frames, data frame extensions (e.g. tibble), lazy data frames (e.g. dbplyr dtplyr). See Methods, , details. join specification created join_by(), character vector variables join . NULL, default, *_join() perform natural join, using variables common across x y. message lists variables can check correct; suppress message supplying explicitly. join different variables x y, use join_by() specification. example, join_by(== b) match x$y$b. join multiple variables, use join_by() specification multiple expressions. example, join_by(== b, c == d) match x$y$b x$c y$d. column names x y, can shorten listing variable names, like join_by(, c). join_by() can also used perform inequality, rolling, overlap joins. See documentation ?join_by details types joins. simple equality joins, can alternatively specify character vector variable names join . example, = c(\"\", \"b\") joins x$y$x$b y$b. variable names differ x y, use named character vector like = c(\"x_a\" = \"y_a\", \"x_b\" = \"y_b\"). perform cross-join, generating combinations x y, see cross_join(). copy x y data source, copy TRUE, y copied src x.  allows join tables across srcs, potentially expensive operation must opt . suffix non-joined duplicate variables x y, suffixes added output disambiguate . character vector length 2. ... parameters passed onto methods.","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/mcmc_data.html","id":null,"dir":"Reference","previous_headings":"","what":"MCMC Data — mcmc_data","title":"MCMC Data — mcmc_data","text":"Combines mcmc object data frame. mcmc object must single parameter length number rows data frame. resultant object can filtered summarized coef calculated.","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/mcmc_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MCMC Data — mcmc_data","text":"","code":"mcmc_data(mcmc, data)"},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/mcmc_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MCMC Data — mcmc_data","text":"mcmc mcmc object one parameter data data frame","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/mcmc_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"MCMC Data — mcmc_data","text":"object class mcmc_data","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/mcmc_data_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Example mcmc data Object — mcmc_data_example","title":"Example mcmc data Object — mcmc_data_example","text":"example mcmc_data object.","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/mcmc_data_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example mcmc data Object — mcmc_data_example","text":"","code":"mcmc_data_example"},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/mcmc_data_example.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example mcmc data Object — mcmc_data_example","text":"object class mcmc_data length 2.","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/mcmc_derive.mcmc_data.html","id":null,"dir":"Reference","previous_headings":"","what":"mcmc_derive mcmc_data — mcmc_derive.mcmc_data","title":"mcmc_derive mcmc_data — mcmc_derive.mcmc_data","text":"Gets mcmcr object one derived parameters. return mcmc_data object use mcmc_derive_data(). default current parameter call par.","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/mcmc_derive.mcmc_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mcmc_derive mcmc_data — mcmc_derive.mcmc_data","text":"","code":"# S3 method for class 'mcmc_data' mcmc_derive(   object,   expr = \"new_par <- par\",   values = list(),   parameter = \"par\",   monitor = \".*\",   parallel = FALSE,   silent = getOption(\"mcmcderive.silent\", FALSE),   ... )"},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/mcmc_derive.mcmc_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"mcmc_derive mcmc_data — mcmc_derive.mcmc_data","text":"object mcmc_data object expr string R expression. values named list values objects object$data parameter string name current MCMC samples expr. monitor regular expression specifying derived parameter(s) expr monitor. parallel flag specifying whether generate derived parameters chain parallel. silent flag specifying whether suppress messages warnings. ... Unused.","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/mcmc_derive.mcmc_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"mcmc_derive mcmc_data — mcmc_derive.mcmc_data","text":"mcmcr object derived parameters.","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/mcmc_derive_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Derive MCMC Data — mcmc_derive_data","title":"Derive MCMC Data — mcmc_derive_data","text":"Get mcmc_data object.","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/mcmc_derive_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Derive MCMC Data — mcmc_derive_data","text":"","code":"mcmc_derive_data(object, ...)"},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/mcmc_derive_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Derive MCMC Data — mcmc_derive_data","text":"object object. ... used.","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/mcmc_derive_data.mcmc_data.html","id":null,"dir":"Reference","previous_headings":"","what":"mcmc_derive mcmc_data — mcmc_derive_data.mcmc_data","title":"mcmc_derive mcmc_data — mcmc_derive_data.mcmc_data","text":"Gets mcmc_data object derived parameters. return mcmcr object one derived parameters use mcmc_derive(). default current parameter call par derived one called new_par.","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/mcmc_derive_data.mcmc_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mcmc_derive mcmc_data — mcmc_derive_data.mcmc_data","text":"","code":"# S3 method for class 'mcmc_data' mcmc_derive_data(   object,   expr = \"new_par <- par\",   values = list(),   parameter = \"par\",   monitor = \"new_par\",   parallel = FALSE,   silent = getOption(\"mcmcderive.silent\", FALSE),   ... )"},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/mcmc_derive_data.mcmc_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"mcmc_derive mcmc_data — mcmc_derive_data.mcmc_data","text":"object mcmc_data object expr string R expression. values named list values objects object$data parameter string name current MCMC samples expr. monitor string name derived parameter return. parallel flag specifying whether generate derived parameters chain parallel. silent flag specifying whether suppress messages warnings. ... Unused.","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/mcmc_derive_data.mcmc_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"mcmc_derive mcmc_data — mcmc_derive_data.mcmc_data","text":"mcmc_data object.","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/mutate.mcmc_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Mutate mcmc_data — mutate.mcmc_data","title":"Mutate mcmc_data — mutate.mcmc_data","text":"Mutate mcmc_data","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/mutate.mcmc_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mutate mcmc_data — mutate.mcmc_data","text":"","code":"# S3 method for class 'mcmc_data' mutate(.data, ...)"},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/mutate.mcmc_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mutate mcmc_data — mutate.mcmc_data","text":".data mcmc_data object ... rename(): <tidy-select> Use new_name = old_name rename selected variables. rename_with(): additional arguments passed onto .fn.","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/mutate.mcmc_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mutate mcmc_data — mutate.mcmc_data","text":"","code":"rename(mcmc_data_example, Spp = species) #> $mcmc #> [1] 3.718025 4.718025 #>  #> nchains:  2  #> niters:  400  #>  #> $data #> # A tibble: 2 × 3 #>   homeworld Spp   films     #>   <chr>     <chr> <list>    #> 1 Tatooine  Human <chr [5]> #> 2 Tatooine  Droid <chr [6]> #>  #> attr(,\"class\") #> [1] \"mcmc_data\""},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. dplyr anti_join, arrange, filter, group_by, inner_join, left_join, mutate, rename, right_join, select, semi_join, slice, summarise, ungroup extras fill_na mcmcderive mcmc_derive tidyr replace_na","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/rename.mcmc_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename mcmcr data — rename.mcmc_data","title":"Rename mcmcr data — rename.mcmc_data","text":"Rename mcmcr data","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/rename.mcmc_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename mcmcr data — rename.mcmc_data","text":"","code":"# S3 method for class 'mcmc_data' rename(.data, ...)"},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/rename.mcmc_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename mcmcr data — rename.mcmc_data","text":".data mcmc_data object ... rename(): <tidy-select> Use new_name = old_name rename selected variables. rename_with(): additional arguments passed onto .fn.","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/rename.mcmc_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rename mcmcr data — rename.mcmc_data","text":"","code":"rename(mcmc_data_example, Spp = species) #> $mcmc #> [1] 3.718025 4.718025 #>  #> nchains:  2  #> niters:  400  #>  #> $data #> # A tibble: 2 × 3 #>   homeworld Spp   films     #>   <chr>     <chr> <list>    #> 1 Tatooine  Human <chr [5]> #> 2 Tatooine  Droid <chr [6]> #>  #> attr(,\"class\") #> [1] \"mcmc_data\""},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/replace_na.mcmc_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace Missing Values mcmc data — replace_na.mcmc_data","title":"Replace Missing Values mcmc data — replace_na.mcmc_data","text":"Replace Missing Values mcmc data","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/replace_na.mcmc_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace Missing Values mcmc data — replace_na.mcmc_data","text":"","code":"# S3 method for class 'mcmc_data' replace_na(data, replace, ...)"},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/replace_na.mcmc_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace Missing Values mcmc data — replace_na.mcmc_data","text":"data data frame vector. replace data data frame, replace takes named list values, one value column missing values replaced. value replace cast type column data used replacement . data vector, replace takes single value. single value replaces missing values vector. replace cast type data. ... Additional arguments methods. Currently unused.","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/right_join.mcmc_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Right join mcmc data — right_join.mcmc_data","title":"Right join mcmc data — right_join.mcmc_data","text":"Right join mcmc data","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/right_join.mcmc_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Right join mcmc data — right_join.mcmc_data","text":"","code":"# S3 method for class 'mcmc_data' right_join(x, y, by = NULL, copy = FALSE, suffix = c(\".x\", \".y\"), ...)"},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/right_join.mcmc_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Right join mcmc data — right_join.mcmc_data","text":"x, y pair data frames, data frame extensions (e.g. tibble), lazy data frames (e.g. dbplyr dtplyr). See Methods, , details. join specification created join_by(), character vector variables join . NULL, default, *_join() perform natural join, using variables common across x y. message lists variables can check correct; suppress message supplying explicitly. join different variables x y, use join_by() specification. example, join_by(== b) match x$y$b. join multiple variables, use join_by() specification multiple expressions. example, join_by(== b, c == d) match x$y$b x$c y$d. column names x y, can shorten listing variable names, like join_by(, c). join_by() can also used perform inequality, rolling, overlap joins. See documentation ?join_by details types joins. simple equality joins, can alternatively specify character vector variable names join . example, = c(\"\", \"b\") joins x$y$x$b y$b. variable names differ x y, use named character vector like = c(\"x_a\" = \"y_a\", \"x_b\" = \"y_b\"). perform cross-join, generating combinations x y, see cross_join(). copy x y data source, copy TRUE, y copied src x.  allows join tables across srcs, potentially expensive operation must opt . suffix non-joined duplicate variables x y, suffixes added output disambiguate . character vector length 2. ... parameters passed onto methods.","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/select.mcmc_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Select mcmcr data — select.mcmc_data","title":"Select mcmcr data — select.mcmc_data","text":"Select mcmcr data","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/select.mcmc_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select mcmcr data — select.mcmc_data","text":"","code":"# S3 method for class 'mcmc_data' select(.data, ...)"},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/select.mcmc_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select mcmcr data — select.mcmc_data","text":".data mcmc_data object ... <tidy-select> One unquoted expressions separated commas. Variable names can used positions data frame, expressions like x:y can used select range variables.","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/select.mcmc_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select mcmcr data — select.mcmc_data","text":"","code":"select(mcmc_data_example, species, homeworld) #> $mcmc #> [1] 3.718025 4.718025 #>  #> nchains:  2  #> niters:  400  #>  #> $data #> # A tibble: 2 × 2 #>   species homeworld #>   <chr>   <chr>     #> 1 Human   Tatooine  #> 2 Droid   Tatooine  #>  #> attr(,\"class\") #> [1] \"mcmc_data\""},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/semi_join.mcmc_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Semi join mcmc data — semi_join.mcmc_data","title":"Semi join mcmc data — semi_join.mcmc_data","text":"Semi join mcmc data","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/semi_join.mcmc_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Semi join mcmc data — semi_join.mcmc_data","text":"","code":"# S3 method for class 'mcmc_data' semi_join(x, y, by = NULL, copy = FALSE, ...)"},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/semi_join.mcmc_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Semi join mcmc data — semi_join.mcmc_data","text":"x, y pair data frames, data frame extensions (e.g. tibble), lazy data frames (e.g. dbplyr dtplyr). See Methods, , details. join specification created join_by(), character vector variables join . NULL, default, *_join() perform natural join, using variables common across x y. message lists variables can check correct; suppress message supplying explicitly. join different variables x y, use join_by() specification. example, join_by(== b) match x$y$b. join multiple variables, use join_by() specification multiple expressions. example, join_by(== b, c == d) match x$y$b x$c y$d. column names x y, can shorten listing variable names, like join_by(, c). join_by() can also used perform inequality, rolling, overlap joins. See documentation ?join_by details types joins. simple equality joins, can alternatively specify character vector variable names join . example, = c(\"\", \"b\") joins x$y$x$b y$b. variable names differ x y, use named character vector like = c(\"x_a\" = \"y_a\", \"x_b\" = \"y_b\"). perform cross-join, generating combinations x y, see cross_join(). copy x y data source, copy TRUE, y copied src x.  allows join tables across srcs, potentially expensive operation must opt . ... parameters passed onto methods.","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/slice.mcmc_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Slice mcmcr data — slice.mcmc_data","title":"Slice mcmcr data — slice.mcmc_data","text":"Slice mcmcr data","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/slice.mcmc_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Slice mcmcr data — slice.mcmc_data","text":"","code":"# S3 method for class 'mcmc_data' slice(.data, ...)"},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/slice.mcmc_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Slice mcmcr data — slice.mcmc_data","text":".data mcmc_data object ... slice(): <data-masking> Integer row values. Provide either positive values keep, negative values drop. values provided must either positive negative. Indices beyond number rows input silently ignored. slice_*(), arguments passed methods.","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/slice.mcmc_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Slice mcmcr data — slice.mcmc_data","text":"","code":"slice(mcmc_data_example, 1L) #> $mcmc #> [1] 3.718025 #>  #> nchains:  2  #> niters:  400  #>  #> $data #> # A tibble: 1 × 3 #>   homeworld species films     #>   <chr>     <chr>   <list>    #> 1 Tatooine  Human   <chr [5]> #>  #> attr(,\"class\") #> [1] \"mcmc_data\""},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/summarise.mcmc_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise mcmc data — summarise.mcmc_data","title":"Summarise mcmc data — summarise.mcmc_data","text":"Summarise mcmc data","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/summarise.mcmc_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise mcmc data — summarise.mcmc_data","text":"","code":"# S3 method for class 'mcmc_data' summarise(.data, ..., .fun = sum)"},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/summarise.mcmc_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise mcmc data — summarise.mcmc_data","text":".data mcmc_data object ... <data-masking> Name-value pairs summary functions. name name variable result. value can : vector length 1, e.g. min(x), n(), sum(.na(y)). data frame, add multiple columns single expression. Returning values size 0 >1 deprecated 1.1.0. Please use reframe() instead. .fun function use summarise MCMC samples.","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/ungroup.mcmc_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Ungroup mcmc data — ungroup.mcmc_data","title":"Ungroup mcmc data — ungroup.mcmc_data","text":"Ungroup mcmc data","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/ungroup.mcmc_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ungroup mcmc data — ungroup.mcmc_data","text":"","code":"# S3 method for class 'mcmc_data' ungroup(x, ...)"},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/ungroup.mcmc_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ungroup mcmc data — ungroup.mcmc_data","text":"x mcmc_data object ... group_by(), variables computations group . Computations always done ungrouped data frame. perform computations grouped data, need use separate mutate() step group_by(). Computations allowed nest_by(). ungroup(), variables remove grouping.","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/reference/ungroup.mcmc_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ungroup mcmc data — ungroup.mcmc_data","text":"","code":"ungroup(mcmc_data_example) #> $mcmc #> [1] 3.718025 4.718025 #>  #> nchains:  2  #> niters:  400  #>  #> $data #> # A tibble: 2 × 3 #>   homeworld species films     #>   <chr>     <chr>   <list>    #> 1 Tatooine  Human   <chr [5]> #> 2 Tatooine  Droid   <chr [6]> #>  #> attr(,\"class\") #> [1] \"mcmc_data\""},{"path":"https://poissonconsulting.github.io/mcmcdata/news/index.html","id":"mcmcdata-0019000","dir":"Changelog","previous_headings":"","what":"mcmcdata 0.0.1.9000","title":"mcmcdata 0.0.1.9000","text":"previous version.","code":""},{"path":"https://poissonconsulting.github.io/mcmcdata/news/index.html","id":"mcmcdata-001","dir":"Changelog","previous_headings":"","what":"mcmcdata 0.0.1","title":"mcmcdata 0.0.1","text":"Added NEWS.md file track changes package.","code":""}]
